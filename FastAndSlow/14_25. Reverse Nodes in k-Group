URL: https://leetcode.com/problems/reverse-nodes-in-k-group/description/

25. Reverse Nodes in k-Group

Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.

k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.

You may not alter the values in the list's nodes, only nodes themselves may be changed.

 
Example 1:

Input: head = [1,2,3,4,5], k = 2
Output: [2,1,4,3,5]

Example 2:

Input: head = [1,2,3,4,5], k = 3
Output: [3,2,1,4,5]

 
Constraints:

	The number of nodes in the list is n.
	1 <= k <= n <= 5000
	0 <= Node.val <= 1000

 
Follow-up: Can you solve the problem in O(1) extra memory space?

Approach:
1. Define a function that reverse a list head uptill k elements.
2. Initialize a ptr to count for k element from current head position.
3. If count is equal k try to invoke revers list method.
4. if new head is null, set new head = revers
5. otherwise set next of existing tail = reverse.
6. Set ktail to existing head.
7. Set ptr = head.
8. return if new head is not null otherwise return head.
