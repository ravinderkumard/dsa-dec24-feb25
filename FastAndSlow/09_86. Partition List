URL: https://leetcode.com/problems/partition-list/description/

86. Partition List

Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

 
Example 1:

Input: head = [1,4,3,2,5,2], x = 3
Output: [1,2,2,4,3,5]

Example 2:

Input: head = [2,1], x = 2
Output: [1,2]

 
Constraints:

	The number of nodes in the list is in the range [0, 200].
	-100 <= Node.val <= 100
	-200 <= x <= 200

Approach 1:
Use 2 dummy list and add element those are smaller than x to 1 list and other lement to 2nd list.
This has time complexity of O(n) but as we are using 2 list to space complexity is O(n)

Approach 2:
IN place replacement.
1. define dummy as start of head.
2. Keep iterating until we reach first elemnt that is greater than x.
3. Define prev = curr and curr = next of curr.
4. 
