52. N-Queens II

The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.

Given an integer n, return the number of distinct solutions to the n-queens puzzle.

 

Example 1:


Input: n = 4
Output: 2
Explanation: There are two distinct solutions to the 4-queens puzzle as shown.
Example 2:

Input: n = 1
Output: 1
 

Constraints:

1 <= n <= 9




class Solution {
    int size;
    public int totalNQueens(int n) {
        size = n;
        return backtrack(0,new HashSet<>(),new HashSet<>(),new HashSet<>());
    }
    private int backtrack(int row,Set<Integer> cols,Set<Integer> diag,Set<Integer> negDiag){
        if(size==row){
            return 1;
        }
        int solution = 0;
        for(int col=0;col<size;col++){
            int currDiag = row-col;
            int currAntiDiag = row+col;
            if(cols.contains(col) || diag.contains(currAntiDiag) || negDiag.contains(currDiag)){
                continue;
            }
            cols.add(col);
            diag.add(currAntiDiag);
            negDiag.add(currDiag);
            solution+=backtrack(row+1,cols,diag,negDiag);
            cols.remove(col);
            diag.remove(currAntiDiag);
            negDiag.remove(currDiag);
        }
        return solution;
    }
}
