253. Meeting Rooms II
Solved
Medium
Topics
conpanies icon
Companies
Hint
Given an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.

 

Example 1:

Input: intervals = [[0,30],[5,10],[15,20]]
Output: 2
Example 2:

Input: intervals = [[7,10],[2,4]]
Output: 1
 

Constraints:

1 <= intervals.length <= 104
0 <= starti < endi <= 106

Approach:
1. Break 2D arry into 2 1D array for start and end.
2. Sort both start and end array.
3. Iterate with ptr from start and end, if current element of start is greater than crrent elemnet of end, update usedRooms-1 and increase end pointer.
4. For all time update roomUsed+1 and update start ptr.



class Solution {
    public int minMeetingRooms(int[][] intervals) {
        if(intervals.length==0){
            return 0;
        }
        Integer[] start = new Integer[intervals.length];
        Integer[] end = new Integer[intervals.length];
        for(int i=0;i<intervals.length;i++){
            start[i] = intervals[i][0];
            end[i] = intervals[i][1];
        }
        Arrays.sort(end, (a,b)->a-b);
        Arrays.sort(start,(a,b)->a-b);
        int startPtr = 0,endPtr = 0;
        int usedRooms = 0;
        while(startPtr<intervals.length){
            if(start[startPtr]>=end[endPtr]){
                usedRooms-=1;
                endPtr+=1;
            }
            usedRooms+=1;
            startPtr+=1;
        }
        return usedRooms;
    }
}

Space Complexity : O(N);
Time Complexity : O(nLogn)
