
739. Daily Temperatures
URL: https://leetcode.com/problems/daily-temperatures/description/

Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 
Example 1:
Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]
Example 2:
Input: temperatures = [30,40,50,60]
Output: [1,1,1,0]
Example 3:
Input: temperatures = [30,60,90]
Output: [1,1,0]

 
Constraints:

	1 <= temperatures.length <= 105
	30 <= temperatures[i] <= 100






class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int length = temperatures.length;
        Stack<Integer> st = new Stack<>();
        int[] answer = new int[length];
        for(int currDay = 0;currDay<length;currDay++){
            while(!st.isEmpty() && temperatures[currDay]>temperatures[st.peek()]){
                int prevDay = st.pop();
                answer[prevDay] = currDay-prevDay;
            }
            st.push(currDay);
        }
        return answer;
    }
}


class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int[] res = new int[n];
        int[] mono = new int[n];
        int top = -1;
        for(int i=0;i<temperatures.length;i++){
            while(top>=0 && temperatures[i]>temperatures[mono[top]]){
                res[mono[top]] = i-mono[top];
                top--;
            }
            mono[++top] = i;
        }
        return res;
    }
}
