URL: https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description/

862. Shortest Subarray with Sum at Least K

Given an integer array nums and an integer k, return the length of the shortest non-empty subarray of nums with a sum of at least k. If there is no such subarray, return -1.

A subarray is a contiguous part of an array.

 
Example 1:
Input: nums = [1], k = 1
Output: 1
Example 2:
Input: nums = [1,2], k = 4
Output: -1
Example 3:
Input: nums = [2,-1,2], k = 3
Output: 3

 
Constraints:

	1 <= nums.length <= 105
	-105 <= nums[i] <= 105
	1 <= k <= 109


Approach:
This is similar to sliding window problem, but with additional requirement of -ve integer.
now if we have negative integer it is possible that later sum qualifies for the shortest array. So to support that
we have to consider prefixSum.
1. Define prefixSum array
2. If difference between current prefixSum and prefix sum of first elment of queue is greater than target.
Updpate min length
3. Define a double ended queue that will store element start position and as we found prefix sum smaller than current 
index remove the elemnt from end of queue.
4. Keep adding elemnet to deque as we move forward
