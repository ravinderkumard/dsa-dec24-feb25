URL: https://leetcode.com/problems/squares-of-a-sorted-array/description/

977. Squares of a Sorted Array

Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

 
Example 1:

Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].

Example 2:

Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]

 
Constraints:

	1 <= nums.length <= 104
	-104 <= nums[i] <= 104
	nums is sorted in non-decreasing order.

 
Follow up: Squaring each element and sorting the new array is very trivial, could you find an O(n) solution using a different approach?



Approach 1:
1. Create a new array with square of each element.
2. Sort the array and return;
Time complexity : O(nlogn);
Space Complexity: O(n);

Approach 2:
As the array is sorted.
Create a result array and start putting elements at the end.
Try using 2 pointers left and right and determine if absolute value of left is less than absolute value of right.
If that is the case put the value at th end of array

-7, -2 , 1 , 2
left = 0
right = 3
idx = 3
put the value of greater element(absolute greater) at the end iterating from last element to first.
so in first pass square of 7 will be place at last index and increase left pointer by 1.
left = 1
right = 3
idx = 2
