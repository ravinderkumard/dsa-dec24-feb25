URL: https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/

530. Minimum Absolute Difference in BST

Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree.

 
Example 1:

Input: root = [4,2,6,1,3]
Output: 1

Example 2:

Input: root = [1,0,48,null,null,12,49]
Output: 1

 
Constraints:

	The number of nodes in the tree is in the range [2, 104].
	0 <= Node.val <= 105



Note: This question is the same as 783: https://leetcode.com/problems/minimum-distance-between-bst-nodes/



Approach:
1. In order traversal of BST is always increasing order, so we can use this property to approach our solution.
  Time O(n)
  Space O(n)

Apporach 2:
define min and prevValue as global paramter and keep on updating as you visit the request.
Using same property the minimum difference is possible between parent and child and not with siblings.
Use In order traversal and store the root as previous value.
as soon the previous value is not null, compare absolute difference between nodes, and update  min value.
Base case if node is null return min value.


